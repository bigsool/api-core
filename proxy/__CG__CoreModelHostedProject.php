<?php

namespace DoctrineProxies\__CG__\Core\Model;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class HostedProject extends \Core\Model\HostedProject implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Core\\Model\\HostedProject' . "\0" . 'id', '' . "\0" . 'Core\\Model\\HostedProject' . "\0" . 'name', '' . "\0" . 'Core\\Model\\HostedProject' . "\0" . 'creationDate', '' . "\0" . 'Core\\Model\\HostedProject' . "\0" . 'patchId', '' . "\0" . 'Core\\Model\\HostedProject' . "\0" . 'lastModificationDate', '' . "\0" . 'Core\\Model\\HostedProject' . "\0" . 'clientNameCreator', '' . "\0" . 'Core\\Model\\HostedProject' . "\0" . 'clientVersionCreator', '' . "\0" . 'Core\\Model\\HostedProject' . "\0" . 'UUIDCreator', '' . "\0" . 'Core\\Model\\HostedProject' . "\0" . 'isUploading', '' . "\0" . 'Core\\Model\\HostedProject' . "\0" . 'isSynchronizable', '' . "\0" . 'Core\\Model\\HostedProject' . "\0" . 'userProjectRoles', '' . "\0" . 'Core\\Model\\HostedProject' . "\0" . 'sharedHostedProjects', '' . "\0" . 'Core\\Model\\HostedProject' . "\0" . 'creator');
        }

        return array('__isInitialized__', '' . "\0" . 'Core\\Model\\HostedProject' . "\0" . 'id', '' . "\0" . 'Core\\Model\\HostedProject' . "\0" . 'name', '' . "\0" . 'Core\\Model\\HostedProject' . "\0" . 'creationDate', '' . "\0" . 'Core\\Model\\HostedProject' . "\0" . 'patchId', '' . "\0" . 'Core\\Model\\HostedProject' . "\0" . 'lastModificationDate', '' . "\0" . 'Core\\Model\\HostedProject' . "\0" . 'clientNameCreator', '' . "\0" . 'Core\\Model\\HostedProject' . "\0" . 'clientVersionCreator', '' . "\0" . 'Core\\Model\\HostedProject' . "\0" . 'UUIDCreator', '' . "\0" . 'Core\\Model\\HostedProject' . "\0" . 'isUploading', '' . "\0" . 'Core\\Model\\HostedProject' . "\0" . 'isSynchronizable', '' . "\0" . 'Core\\Model\\HostedProject' . "\0" . 'userProjectRoles', '' . "\0" . 'Core\\Model\\HostedProject' . "\0" . 'sharedHostedProjects', '' . "\0" . 'Core\\Model\\HostedProject' . "\0" . 'creator');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (HostedProject $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', array($name));

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', array());

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreationDate($creationDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreationDate', array($creationDate));

        return parent::setCreationDate($creationDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreationDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreationDate', array());

        return parent::getCreationDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setPatchId($patchId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPatchId', array($patchId));

        return parent::setPatchId($patchId);
    }

    /**
     * {@inheritDoc}
     */
    public function getPatchId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPatchId', array());

        return parent::getPatchId();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastModificationDate($lastModificationDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastModificationDate', array($lastModificationDate));

        return parent::setLastModificationDate($lastModificationDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastModificationDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastModificationDate', array());

        return parent::getLastModificationDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setClientNameCreator($clientNameCreator)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setClientNameCreator', array($clientNameCreator));

        return parent::setClientNameCreator($clientNameCreator);
    }

    /**
     * {@inheritDoc}
     */
    public function getClientNameCreator()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getClientNameCreator', array());

        return parent::getClientNameCreator();
    }

    /**
     * {@inheritDoc}
     */
    public function setClientVersionCreator($clientVersionCreator)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setClientVersionCreator', array($clientVersionCreator));

        return parent::setClientVersionCreator($clientVersionCreator);
    }

    /**
     * {@inheritDoc}
     */
    public function getClientVersionCreator()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getClientVersionCreator', array());

        return parent::getClientVersionCreator();
    }

    /**
     * {@inheritDoc}
     */
    public function setUUIDCreator($uUIDCreator)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUUIDCreator', array($uUIDCreator));

        return parent::setUUIDCreator($uUIDCreator);
    }

    /**
     * {@inheritDoc}
     */
    public function getUUIDCreator()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUUIDCreator', array());

        return parent::getUUIDCreator();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsUploading($isUploading)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsUploading', array($isUploading));

        return parent::setIsUploading($isUploading);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsUploading()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsUploading', array());

        return parent::getIsUploading();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsSynchronizable($isSynchronizable)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsSynchronizable', array($isSynchronizable));

        return parent::setIsSynchronizable($isSynchronizable);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsSynchronizable()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsSynchronizable', array());

        return parent::getIsSynchronizable();
    }

    /**
     * {@inheritDoc}
     */
    public function addUserProjectRole(\Core\Model\UserProjectRole $userProjectRoles)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addUserProjectRole', array($userProjectRoles));

        return parent::addUserProjectRole($userProjectRoles);
    }

    /**
     * {@inheritDoc}
     */
    public function removeUserProjectRole(\Core\Model\UserProjectRole $userProjectRoles)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeUserProjectRole', array($userProjectRoles));

        return parent::removeUserProjectRole($userProjectRoles);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserProjectRoles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserProjectRoles', array());

        return parent::getUserProjectRoles();
    }

    /**
     * {@inheritDoc}
     */
    public function addSharedHostedProject(\Core\Model\SharedHostedProject $sharedHostedProjects)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addSharedHostedProject', array($sharedHostedProjects));

        return parent::addSharedHostedProject($sharedHostedProjects);
    }

    /**
     * {@inheritDoc}
     */
    public function removeSharedHostedProject(\Core\Model\SharedHostedProject $sharedHostedProjects)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeSharedHostedProject', array($sharedHostedProjects));

        return parent::removeSharedHostedProject($sharedHostedProjects);
    }

    /**
     * {@inheritDoc}
     */
    public function getSharedHostedProjects()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSharedHostedProjects', array());

        return parent::getSharedHostedProjects();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreator(\Core\Model\User $creator)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreator', array($creator));

        return parent::setCreator($creator);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreator()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreator', array());

        return parent::getCreator();
    }

}
